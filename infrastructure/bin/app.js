#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const open_source_tracker_stack_1 = require("../lib/open-source-tracker-stack");
const app = new cdk.App();
// Get environment from context
const environment = app.node.tryGetContext('environment') || 'staging';
// Environment-specific configurations
const envConfigs = {
    staging: {
        env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: 'us-east-1' },
        stackName: 'OpenSourceTrackerStagingV2',
        domainName: undefined, // No custom domain for staging
        githubTokenSecretName: 'github-token-dev',
        devCredentialsSecretName: 'staging-credentials',
        dataCollectionSchedule: 'cron(0 0,3,6,9,12,15,18,21 * * ? *)', // Same as production: every 3 hours at specific times
        useSharedDatabase: false, // Staging uses its own database tables
        sharedDatabaseEnvironment: undefined, // No shared database for staging
    },
    prod: {
        env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: 'us-east-1' },
        stackName: 'OpenSourceTrackerProdV2',
        domainName: undefined, // Add your custom domain here if needed
        githubTokenSecretName: 'github-token-prod',
        devCredentialsSecretName: undefined, // No staging credentials for prod
        dataCollectionSchedule: 'cron(0 */3 * * ? *)', // Every 3 hours starting at 00:00 UTC (4 PM PST)
        useSharedDatabase: true, // Prod uses shared database initially
        sharedDatabaseEnvironment: 'dev', // Use existing dev tables as the shared database
    }
};
const config = envConfigs[environment];
if (!config) {
    throw new Error(`Invalid environment: ${environment}. Must be 'staging' or 'prod'`);
}
new open_source_tracker_stack_1.OpenSourceTrackerStack(app, config.stackName, {
    environment,
    domainName: config.domainName,
    githubTokenSecretName: config.githubTokenSecretName,
    devCredentialsSecretName: config.devCredentialsSecretName,
    dataCollectionSchedule: config.dataCollectionSchedule,
    useSharedDatabase: config.useSharedDatabase,
    sharedDatabaseEnvironment: config.sharedDatabaseEnvironment,
    env: config.env,
    description: `Open Source Tracker ${environment} environment`,
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLHVDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsZ0ZBQTBFO0FBRTFFLE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBRTFCLCtCQUErQjtBQUMvQixNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsSUFBSSxTQUFTLENBQUM7QUFFdkUsc0NBQXNDO0FBQ3RDLE1BQU0sVUFBVSxHQUFHO0lBQ2pCLE9BQU8sRUFBRTtRQUNQLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUU7UUFDdEUsU0FBUyxFQUFFLDRCQUE0QjtRQUN2QyxVQUFVLEVBQUUsU0FBUyxFQUFFLCtCQUErQjtRQUN0RCxxQkFBcUIsRUFBRSxrQkFBa0I7UUFDekMsd0JBQXdCLEVBQUUscUJBQXFCO1FBQy9DLHNCQUFzQixFQUFFLHFDQUFxQyxFQUFFLHNEQUFzRDtRQUNySCxpQkFBaUIsRUFBRSxLQUFLLEVBQUUsdUNBQXVDO1FBQ2pFLHlCQUF5QixFQUFFLFNBQVMsRUFBRSxpQ0FBaUM7S0FDeEU7SUFDRCxJQUFJLEVBQUU7UUFDSixHQUFHLEVBQUUsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFO1FBQ3RFLFNBQVMsRUFBRSx5QkFBeUI7UUFDcEMsVUFBVSxFQUFFLFNBQVMsRUFBRSx3Q0FBd0M7UUFDL0QscUJBQXFCLEVBQUUsbUJBQW1CO1FBQzFDLHdCQUF3QixFQUFFLFNBQVMsRUFBRSxrQ0FBa0M7UUFDdkUsc0JBQXNCLEVBQUUscUJBQXFCLEVBQUUsaURBQWlEO1FBQ2hHLGlCQUFpQixFQUFFLElBQUksRUFBRSxzQ0FBc0M7UUFDL0QseUJBQXlCLEVBQUUsS0FBSyxFQUFFLGlEQUFpRDtLQUNwRjtDQUNGLENBQUM7QUFFRixNQUFNLE1BQU0sR0FBRyxVQUFVLENBQUMsV0FBc0MsQ0FBQyxDQUFDO0FBRWxFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNaLE1BQU0sSUFBSSxLQUFLLENBQUMsd0JBQXdCLFdBQVcsK0JBQStCLENBQUMsQ0FBQztBQUN0RixDQUFDO0FBRUQsSUFBSSxrREFBc0IsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLFNBQVMsRUFBRTtJQUNoRCxXQUFXO0lBQ1gsVUFBVSxFQUFFLE1BQU0sQ0FBQyxVQUFVO0lBQzdCLHFCQUFxQixFQUFFLE1BQU0sQ0FBQyxxQkFBcUI7SUFDbkQsd0JBQXdCLEVBQUUsTUFBTSxDQUFDLHdCQUF3QjtJQUN6RCxzQkFBc0IsRUFBRSxNQUFNLENBQUMsc0JBQXNCO0lBQ3JELGlCQUFpQixFQUFFLE1BQU0sQ0FBQyxpQkFBaUI7SUFDM0MseUJBQXlCLEVBQUUsTUFBTSxDQUFDLHlCQUF5QjtJQUMzRCxHQUFHLEVBQUUsTUFBTSxDQUFDLEdBQUc7SUFDZixXQUFXLEVBQUUsdUJBQXVCLFdBQVcsY0FBYztDQUM5RCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5pbXBvcnQgJ3NvdXJjZS1tYXAtc3VwcG9ydC9yZWdpc3Rlcic7XG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0IHsgT3BlblNvdXJjZVRyYWNrZXJTdGFjayB9IGZyb20gJy4uL2xpYi9vcGVuLXNvdXJjZS10cmFja2VyLXN0YWNrJztcblxuY29uc3QgYXBwID0gbmV3IGNkay5BcHAoKTtcblxuLy8gR2V0IGVudmlyb25tZW50IGZyb20gY29udGV4dFxuY29uc3QgZW52aXJvbm1lbnQgPSBhcHAubm9kZS50cnlHZXRDb250ZXh0KCdlbnZpcm9ubWVudCcpIHx8ICdzdGFnaW5nJztcblxuLy8gRW52aXJvbm1lbnQtc3BlY2lmaWMgY29uZmlndXJhdGlvbnNcbmNvbnN0IGVudkNvbmZpZ3MgPSB7XG4gIHN0YWdpbmc6IHtcbiAgICBlbnY6IHsgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCwgcmVnaW9uOiAndXMtZWFzdC0xJyB9LFxuICAgIHN0YWNrTmFtZTogJ09wZW5Tb3VyY2VUcmFja2VyU3RhZ2luZ1YyJyxcbiAgICBkb21haW5OYW1lOiB1bmRlZmluZWQsIC8vIE5vIGN1c3RvbSBkb21haW4gZm9yIHN0YWdpbmdcbiAgICBnaXRodWJUb2tlblNlY3JldE5hbWU6ICdnaXRodWItdG9rZW4tZGV2JyxcbiAgICBkZXZDcmVkZW50aWFsc1NlY3JldE5hbWU6ICdzdGFnaW5nLWNyZWRlbnRpYWxzJyxcbiAgICBkYXRhQ29sbGVjdGlvblNjaGVkdWxlOiAnY3JvbigwIDAsMyw2LDksMTIsMTUsMTgsMjEgKiAqID8gKiknLCAvLyBTYW1lIGFzIHByb2R1Y3Rpb246IGV2ZXJ5IDMgaG91cnMgYXQgc3BlY2lmaWMgdGltZXNcbiAgICB1c2VTaGFyZWREYXRhYmFzZTogZmFsc2UsIC8vIFN0YWdpbmcgdXNlcyBpdHMgb3duIGRhdGFiYXNlIHRhYmxlc1xuICAgIHNoYXJlZERhdGFiYXNlRW52aXJvbm1lbnQ6IHVuZGVmaW5lZCwgLy8gTm8gc2hhcmVkIGRhdGFiYXNlIGZvciBzdGFnaW5nXG4gIH0sXG4gIHByb2Q6IHtcbiAgICBlbnY6IHsgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCwgcmVnaW9uOiAndXMtZWFzdC0xJyB9LFxuICAgIHN0YWNrTmFtZTogJ09wZW5Tb3VyY2VUcmFja2VyUHJvZFYyJyxcbiAgICBkb21haW5OYW1lOiB1bmRlZmluZWQsIC8vIEFkZCB5b3VyIGN1c3RvbSBkb21haW4gaGVyZSBpZiBuZWVkZWRcbiAgICBnaXRodWJUb2tlblNlY3JldE5hbWU6ICdnaXRodWItdG9rZW4tcHJvZCcsXG4gICAgZGV2Q3JlZGVudGlhbHNTZWNyZXROYW1lOiB1bmRlZmluZWQsIC8vIE5vIHN0YWdpbmcgY3JlZGVudGlhbHMgZm9yIHByb2RcbiAgICBkYXRhQ29sbGVjdGlvblNjaGVkdWxlOiAnY3JvbigwICovMyAqICogPyAqKScsIC8vIEV2ZXJ5IDMgaG91cnMgc3RhcnRpbmcgYXQgMDA6MDAgVVRDICg0IFBNIFBTVClcbiAgICB1c2VTaGFyZWREYXRhYmFzZTogdHJ1ZSwgLy8gUHJvZCB1c2VzIHNoYXJlZCBkYXRhYmFzZSBpbml0aWFsbHlcbiAgICBzaGFyZWREYXRhYmFzZUVudmlyb25tZW50OiAnZGV2JywgLy8gVXNlIGV4aXN0aW5nIGRldiB0YWJsZXMgYXMgdGhlIHNoYXJlZCBkYXRhYmFzZVxuICB9XG59O1xuXG5jb25zdCBjb25maWcgPSBlbnZDb25maWdzW2Vudmlyb25tZW50IGFzIGtleW9mIHR5cGVvZiBlbnZDb25maWdzXTtcblxuaWYgKCFjb25maWcpIHtcbiAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGVudmlyb25tZW50OiAke2Vudmlyb25tZW50fS4gTXVzdCBiZSAnc3RhZ2luZycgb3IgJ3Byb2QnYCk7XG59XG5cbm5ldyBPcGVuU291cmNlVHJhY2tlclN0YWNrKGFwcCwgY29uZmlnLnN0YWNrTmFtZSwge1xuICBlbnZpcm9ubWVudCxcbiAgZG9tYWluTmFtZTogY29uZmlnLmRvbWFpbk5hbWUsXG4gIGdpdGh1YlRva2VuU2VjcmV0TmFtZTogY29uZmlnLmdpdGh1YlRva2VuU2VjcmV0TmFtZSxcbiAgZGV2Q3JlZGVudGlhbHNTZWNyZXROYW1lOiBjb25maWcuZGV2Q3JlZGVudGlhbHNTZWNyZXROYW1lLFxuICBkYXRhQ29sbGVjdGlvblNjaGVkdWxlOiBjb25maWcuZGF0YUNvbGxlY3Rpb25TY2hlZHVsZSxcbiAgdXNlU2hhcmVkRGF0YWJhc2U6IGNvbmZpZy51c2VTaGFyZWREYXRhYmFzZSxcbiAgc2hhcmVkRGF0YWJhc2VFbnZpcm9ubWVudDogY29uZmlnLnNoYXJlZERhdGFiYXNlRW52aXJvbm1lbnQsXG4gIGVudjogY29uZmlnLmVudixcbiAgZGVzY3JpcHRpb246IGBPcGVuIFNvdXJjZSBUcmFja2VyICR7ZW52aXJvbm1lbnR9IGVudmlyb25tZW50YCxcbn0pOyAiXX0=