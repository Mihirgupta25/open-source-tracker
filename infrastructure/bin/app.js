#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const open_source_tracker_stack_1 = require("../lib/open-source-tracker-stack");
const app = new cdk.App();
// Get environment from context
const environment = app.node.tryGetContext('environment') || 'dev';
// Environment-specific configurations
const envConfigs = {
    dev: {
        env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: 'us-east-1' },
        stackName: 'OpenSourceTrackerDev',
        domainName: undefined, // No custom domain for dev
        githubTokenSecretName: 'github-token-dev',
        dataCollectionSchedule: 'cron(0 12 * * ? *)', // Daily at 12 PM UTC
        useSharedDatabase: true, // Dev uses shared database initially
        sharedDatabaseEnvironment: 'dev', // Use dev tables as the shared database
    },
    prod: {
        env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: 'us-east-1' },
        stackName: 'OpenSourceTrackerProd',
        domainName: undefined, // Add your custom domain here if needed
        githubTokenSecretName: 'github-token-prod',
        dataCollectionSchedule: 'cron(0 12 * * ? *)', // Daily at 12 PM UTC
        useSharedDatabase: true, // Prod uses shared database initially
        sharedDatabaseEnvironment: 'dev', // Use dev tables as the shared database
    }
};
const config = envConfigs[environment];
if (!config) {
    throw new Error(`Invalid environment: ${environment}. Must be 'dev' or 'prod'`);
}
new open_source_tracker_stack_1.OpenSourceTrackerStack(app, config.stackName, {
    environment,
    domainName: config.domainName,
    githubTokenSecretName: config.githubTokenSecretName,
    dataCollectionSchedule: config.dataCollectionSchedule,
    useSharedDatabase: config.useSharedDatabase,
    sharedDatabaseEnvironment: config.sharedDatabaseEnvironment,
    env: config.env,
    description: `Open Source Tracker ${environment} environment`,
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLHVDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsZ0ZBQTBFO0FBRTFFLE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBRTFCLCtCQUErQjtBQUMvQixNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsSUFBSSxLQUFLLENBQUM7QUFFbkUsc0NBQXNDO0FBQ3RDLE1BQU0sVUFBVSxHQUFHO0lBQ2pCLEdBQUcsRUFBRTtRQUNILEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUU7UUFDdEUsU0FBUyxFQUFFLHNCQUFzQjtRQUNqQyxVQUFVLEVBQUUsU0FBUyxFQUFFLDJCQUEyQjtRQUNsRCxxQkFBcUIsRUFBRSxrQkFBa0I7UUFDekMsc0JBQXNCLEVBQUUsb0JBQW9CLEVBQUUscUJBQXFCO1FBQ25FLGlCQUFpQixFQUFFLElBQUksRUFBRSxxQ0FBcUM7UUFDOUQseUJBQXlCLEVBQUUsS0FBSyxFQUFFLHdDQUF3QztLQUMzRTtJQUNELElBQUksRUFBRTtRQUNKLEdBQUcsRUFBRSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUU7UUFDdEUsU0FBUyxFQUFFLHVCQUF1QjtRQUNsQyxVQUFVLEVBQUUsU0FBUyxFQUFFLHdDQUF3QztRQUMvRCxxQkFBcUIsRUFBRSxtQkFBbUI7UUFDMUMsc0JBQXNCLEVBQUUsb0JBQW9CLEVBQUUscUJBQXFCO1FBQ25FLGlCQUFpQixFQUFFLElBQUksRUFBRSxzQ0FBc0M7UUFDL0QseUJBQXlCLEVBQUUsS0FBSyxFQUFFLHdDQUF3QztLQUMzRTtDQUNGLENBQUM7QUFFRixNQUFNLE1BQU0sR0FBRyxVQUFVLENBQUMsV0FBc0MsQ0FBQyxDQUFDO0FBRWxFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNaLE1BQU0sSUFBSSxLQUFLLENBQUMsd0JBQXdCLFdBQVcsMkJBQTJCLENBQUMsQ0FBQztBQUNsRixDQUFDO0FBRUQsSUFBSSxrREFBc0IsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLFNBQVMsRUFBRTtJQUNoRCxXQUFXO0lBQ1gsVUFBVSxFQUFFLE1BQU0sQ0FBQyxVQUFVO0lBQzdCLHFCQUFxQixFQUFFLE1BQU0sQ0FBQyxxQkFBcUI7SUFDbkQsc0JBQXNCLEVBQUUsTUFBTSxDQUFDLHNCQUFzQjtJQUNyRCxpQkFBaUIsRUFBRSxNQUFNLENBQUMsaUJBQWlCO0lBQzNDLHlCQUF5QixFQUFFLE1BQU0sQ0FBQyx5QkFBeUI7SUFDM0QsR0FBRyxFQUFFLE1BQU0sQ0FBQyxHQUFHO0lBQ2YsV0FBVyxFQUFFLHVCQUF1QixXQUFXLGNBQWM7Q0FDOUQsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInO1xuaW1wb3J0ICogYXMgY2RrIGZyb20gJ2F3cy1jZGstbGliJztcbmltcG9ydCB7IE9wZW5Tb3VyY2VUcmFja2VyU3RhY2sgfSBmcm9tICcuLi9saWIvb3Blbi1zb3VyY2UtdHJhY2tlci1zdGFjayc7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5cbi8vIEdldCBlbnZpcm9ubWVudCBmcm9tIGNvbnRleHRcbmNvbnN0IGVudmlyb25tZW50ID0gYXBwLm5vZGUudHJ5R2V0Q29udGV4dCgnZW52aXJvbm1lbnQnKSB8fCAnZGV2JztcblxuLy8gRW52aXJvbm1lbnQtc3BlY2lmaWMgY29uZmlndXJhdGlvbnNcbmNvbnN0IGVudkNvbmZpZ3MgPSB7XG4gIGRldjoge1xuICAgIGVudjogeyBhY2NvdW50OiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9BQ0NPVU5ULCByZWdpb246ICd1cy1lYXN0LTEnIH0sXG4gICAgc3RhY2tOYW1lOiAnT3BlblNvdXJjZVRyYWNrZXJEZXYnLFxuICAgIGRvbWFpbk5hbWU6IHVuZGVmaW5lZCwgLy8gTm8gY3VzdG9tIGRvbWFpbiBmb3IgZGV2XG4gICAgZ2l0aHViVG9rZW5TZWNyZXROYW1lOiAnZ2l0aHViLXRva2VuLWRldicsXG4gICAgZGF0YUNvbGxlY3Rpb25TY2hlZHVsZTogJ2Nyb24oMCAxMiAqICogPyAqKScsIC8vIERhaWx5IGF0IDEyIFBNIFVUQ1xuICAgIHVzZVNoYXJlZERhdGFiYXNlOiB0cnVlLCAvLyBEZXYgdXNlcyBzaGFyZWQgZGF0YWJhc2UgaW5pdGlhbGx5XG4gICAgc2hhcmVkRGF0YWJhc2VFbnZpcm9ubWVudDogJ2RldicsIC8vIFVzZSBkZXYgdGFibGVzIGFzIHRoZSBzaGFyZWQgZGF0YWJhc2VcbiAgfSxcbiAgcHJvZDoge1xuICAgIGVudjogeyBhY2NvdW50OiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9BQ0NPVU5ULCByZWdpb246ICd1cy1lYXN0LTEnIH0sXG4gICAgc3RhY2tOYW1lOiAnT3BlblNvdXJjZVRyYWNrZXJQcm9kJyxcbiAgICBkb21haW5OYW1lOiB1bmRlZmluZWQsIC8vIEFkZCB5b3VyIGN1c3RvbSBkb21haW4gaGVyZSBpZiBuZWVkZWRcbiAgICBnaXRodWJUb2tlblNlY3JldE5hbWU6ICdnaXRodWItdG9rZW4tcHJvZCcsXG4gICAgZGF0YUNvbGxlY3Rpb25TY2hlZHVsZTogJ2Nyb24oMCAxMiAqICogPyAqKScsIC8vIERhaWx5IGF0IDEyIFBNIFVUQ1xuICAgIHVzZVNoYXJlZERhdGFiYXNlOiB0cnVlLCAvLyBQcm9kIHVzZXMgc2hhcmVkIGRhdGFiYXNlIGluaXRpYWxseVxuICAgIHNoYXJlZERhdGFiYXNlRW52aXJvbm1lbnQ6ICdkZXYnLCAvLyBVc2UgZGV2IHRhYmxlcyBhcyB0aGUgc2hhcmVkIGRhdGFiYXNlXG4gIH1cbn07XG5cbmNvbnN0IGNvbmZpZyA9IGVudkNvbmZpZ3NbZW52aXJvbm1lbnQgYXMga2V5b2YgdHlwZW9mIGVudkNvbmZpZ3NdO1xuXG5pZiAoIWNvbmZpZykge1xuICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgZW52aXJvbm1lbnQ6ICR7ZW52aXJvbm1lbnR9LiBNdXN0IGJlICdkZXYnIG9yICdwcm9kJ2ApO1xufVxuXG5uZXcgT3BlblNvdXJjZVRyYWNrZXJTdGFjayhhcHAsIGNvbmZpZy5zdGFja05hbWUsIHtcbiAgZW52aXJvbm1lbnQsXG4gIGRvbWFpbk5hbWU6IGNvbmZpZy5kb21haW5OYW1lLFxuICBnaXRodWJUb2tlblNlY3JldE5hbWU6IGNvbmZpZy5naXRodWJUb2tlblNlY3JldE5hbWUsXG4gIGRhdGFDb2xsZWN0aW9uU2NoZWR1bGU6IGNvbmZpZy5kYXRhQ29sbGVjdGlvblNjaGVkdWxlLFxuICB1c2VTaGFyZWREYXRhYmFzZTogY29uZmlnLnVzZVNoYXJlZERhdGFiYXNlLFxuICBzaGFyZWREYXRhYmFzZUVudmlyb25tZW50OiBjb25maWcuc2hhcmVkRGF0YWJhc2VFbnZpcm9ubWVudCxcbiAgZW52OiBjb25maWcuZW52LFxuICBkZXNjcmlwdGlvbjogYE9wZW4gU291cmNlIFRyYWNrZXIgJHtlbnZpcm9ubWVudH0gZW52aXJvbm1lbnRgLFxufSk7ICJdfQ==